--[[

This is vecsor ui library

Developer:
Teddy#1431

Helpers:
garrett#6017
SquidSaysNo#9071

Have Fun!!

]]

local lib = {}

function lib:CreateWindow(name)

	if name == "" or nil then return end

	local blur = Instance.new("BlurEffect")
	local Vecsor = Instance.new("ScreenGui")
	local Main = Instance.new("Frame")
	local SideBar = Instance.new("Frame")
	local Title = Instance.new("TextLabel")
	local GameName = Instance.new("TextLabel")
	local TabButtons = Instance.new("ScrollingFrame")
	local UIListLayout = Instance.new("UIListLayout")
	local Tabs = Instance.new("Frame")
	local NotificationsFrame = Instance.new("Frame")
	local UIListLayout_3 = Instance.new("UIListLayout")

	blur.Parent = game:GetService("Lighting")
	blur.Enabled = true

	Vecsor.Name = "Vecsor"
	Vecsor.Parent = game.CoreGui
	Vecsor.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Main.Name = "Main"
	Main.Parent = Vecsor
	Main.AnchorPoint = Vector2.new(0.5, 0.5)
	Main.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	Main.BorderSizePixel = 0
	Main.Position = UDim2.new(0.5, 0, 0.5, 0)
	Main.Size = UDim2.new(0, 600, 0, 350)
	Main.Visible = true

	NotificationsFrame.Name = "NotificationsFrame"
	NotificationsFrame.Parent = Vecsor
	NotificationsFrame.AnchorPoint = Vector2.new(1, 1)
	NotificationsFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	NotificationsFrame.BackgroundTransparency = 1
	NotificationsFrame.BorderSizePixel = 0
	NotificationsFrame.Position = UDim2.new(0.991489351, 0, 0.991071403, 0)
	NotificationsFrame.Size = UDim2.new(0, 295, 0, 113)

	UIListLayout_3.Parent = NotificationsFrame
	UIListLayout_3.HorizontalAlignment = Enum.HorizontalAlignment.Right
	UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout_3.VerticalAlignment = Enum.VerticalAlignment.Bottom
	UIListLayout_3.Padding = UDim.new(0, 10)

	SideBar.Name = "SideBar"
	SideBar.Parent = Main
	SideBar.BackgroundColor3 = Color3.fromRGB(34, 34, 34)
	SideBar.BorderSizePixel = 0
	SideBar.Size = UDim2.new(0, 172, 0, 350)

	Title.Name = "Title"
	Title.Parent = SideBar
	Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Title.BackgroundTransparency = 1.000
	Title.BorderSizePixel = 0
	Title.Size = UDim2.new(0, 172, 0, 50)
	Title.Font = Enum.Font.SourceSans
	Title.Text = name
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextScaled = true
	Title.TextSize = 14.000
	Title.TextWrapped = true

	GameName.Name = "GameName"
	GameName.Parent = SideBar
	GameName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	GameName.BackgroundTransparency = 1.000
	GameName.BorderSizePixel = 0
	GameName.Position = UDim2.new(0.133720934, 0, 0.142857149, 0)
	GameName.Size = UDim2.new(0, 126, 0, 37)
	GameName.Font = Enum.Font.SourceSans
	GameName.Text = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
	GameName.TextColor3 = Color3.fromRGB(108, 108, 108)
	GameName.TextScaled = true
	GameName.TextSize = 14.000
	GameName.TextWrapped = true

	TabButtons.Name = "TabButtons"
	TabButtons.Parent = SideBar
	TabButtons.Active = true
	TabButtons.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	TabButtons.BackgroundTransparency = 1.000
	TabButtons.BorderSizePixel = 0
	TabButtons.Position = UDim2.new(0, 0, 0.274285704, 0)
	TabButtons.Size = UDim2.new(0, 172, 0, 242)
	TabButtons.CanvasSize = UDim2.new(0, 0, 0, 0)
	TabButtons.ScrollBarThickness = 0

	UIListLayout.Parent = TabButtons
	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0.0199999996, 0)

	Tabs.Name = "Tabs"
	Tabs.Parent = Main
	Tabs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Tabs.BackgroundTransparency = 1.000
	Tabs.BorderSizePixel = 0
	Tabs.Position = UDim2.new(0.286666691, 0, 0, 0)
	Tabs.Size = UDim2.new(0, 428, 0, 350)
	
	game:GetService("UserInputService").InputBegan:Connect(function(key)
		if key.KeyCode == Enum.KeyCode.RightControl then
			Main.Visible = not Main.Visible
			blur.Enabled = not blur.Enabled
		end
	end)

	local function KVVDN_fake_script() -- TabButtons.AutoResize 
		local script = Instance.new('LocalScript', TabButtons)


		while wait(0.01) do
			local Canvas = script.Parent
			local Constraint = script.Parent.UIListLayout
			Canvas.CanvasSize = UDim2.new(0, Constraint.AbsoluteContentSize.X, 0, Constraint.AbsoluteContentSize.Y)
		end
	end
	coroutine.wrap(KVVDN_fake_script)()

	local tabs = {}

	function tabs:Notification(title, desc, time, mode)

		if title == "" or nil then return end
		if desc == "" or nil then return end
		if time == "" or nil then return end
		if mode == "" or nil then return end

		local NotificationTemplate = Instance.new("Frame")
		local NotificationTitle = Instance.new("TextLabel")
		local NotificationDescription = Instance.new("TextLabel")
		local Topbar = Instance.new("Frame")
		local Bottombar = Instance.new("Frame")

		if mode == 1 then
			NotificationTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			NotificationDescription.TextColor3 = Color3.fromRGB(148, 148, 148)
			Topbar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Bottombar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		elseif mode == 2 then
			NotificationTitle.TextColor3 = Color3.fromRGB(255, 255, 0)
			NotificationDescription.TextColor3 = Color3.fromRGB(148, 148, 0)
			Topbar.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
			Bottombar.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
		elseif mode == 3 then
			NotificationTitle.TextColor3 = Color3.fromRGB(255, 0, 0)
			NotificationDescription.TextColor3 = Color3.fromRGB(148, 0, 0)
			Topbar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
			Bottombar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
		end

		NotificationTemplate.Name = "NotificationTemplate"
		NotificationTemplate.Parent = NotificationsFrame
		NotificationTemplate.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		NotificationTemplate.BorderSizePixel = 0
		NotificationTemplate.Position = UDim2.new(0.0406779647, 0, 0.862244904, 0)
		NotificationTemplate.Size = UDim2.new(0, 283, 0, 108)

		NotificationTitle.Name = "NotificationTitle"
		NotificationTitle.Parent = NotificationTemplate
		NotificationTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NotificationTitle.BackgroundTransparency = 1.000
		NotificationTitle.BorderSizePixel = 0
		NotificationTitle.Size = UDim2.new(0, 283, 0, 31)
		NotificationTitle.Font = Enum.Font.SourceSans
		NotificationTitle.Text = title
		NotificationTitle.TextScaled = true
		NotificationTitle.TextSize = 14.000
		NotificationTitle.TextWrapped = true

		NotificationDescription.Name = "NotificationDescription"
		NotificationDescription.Parent = NotificationTemplate
		NotificationDescription.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		NotificationDescription.BackgroundTransparency = 1.000
		NotificationDescription.BorderSizePixel = 0
		NotificationDescription.Position = UDim2.new(0, 0, 0.287037045, 0)
		NotificationDescription.Size = UDim2.new(0, 283, 0, 56)
		NotificationDescription.Font = Enum.Font.SourceSans
		NotificationDescription.Text = desc
		NotificationDescription.TextScaled = true
		NotificationDescription.TextSize = 14.000
		NotificationDescription.TextWrapped = true

		Topbar.Name = "Topbar"
		Topbar.Parent = NotificationTemplate
		Topbar.BorderSizePixel = 0
		Topbar.Position = UDim2.new(0.233215541, 0, 0.287037045, 0)
		Topbar.Size = UDim2.new(0, 151, 0, 1)

		Bottombar.Name = "Bottombar"
		Bottombar.Parent = NotificationTemplate
		Bottombar.BorderSizePixel = 0
		Bottombar.Position = UDim2.new(0.0424028262, 0, 0.898148119, 0)
		Bottombar.Size = UDim2.new(0, 258, 0, 5)

		Bottombar:TweenSize(UDim2.new(0, 0,0, 5), "Out", "Linear", time)
		wait(time + 0.1)
		NotificationTemplate:Destroy()

	end

	function tabs:CreateTab(name)

		if name == "" or nil then return end

		local TabButtonTemplate = Instance.new("TextButton")
		local TabFrameTemplate = Instance.new("ScrollingFrame")
		local UIListLayout_2 = Instance.new("UIListLayout")

		TabButtonTemplate.Name = name
		TabButtonTemplate.Parent = TabButtons
		TabButtonTemplate.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
		TabButtonTemplate.BorderSizePixel = 0
		TabButtonTemplate.Position = UDim2.new(0.0872092992, 0, 0, 0)
		TabButtonTemplate.Size = UDim2.new(0, 145, 0, 33)
		TabButtonTemplate.Font = Enum.Font.SourceSans
		TabButtonTemplate.Text = name
		TabButtonTemplate.TextColor3 = Color3.fromRGB(255, 255, 255)
		TabButtonTemplate.TextScaled = true
		TabButtonTemplate.TextSize = 14.000
		TabButtonTemplate.TextWrapped = true

		TabFrameTemplate.Name = name
		TabFrameTemplate.Parent = Tabs
		TabFrameTemplate.Active = true
		TabFrameTemplate.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TabFrameTemplate.BackgroundTransparency = 1.000
		TabFrameTemplate.BorderSizePixel = 0
		TabFrameTemplate.Position = UDim2.new(0, 0, 0.0314285718, 0)
		TabFrameTemplate.Size = UDim2.new(0, 428, 0, 327)
		TabFrameTemplate.Visible = false
		TabFrameTemplate.CanvasSize = UDim2.new(0, 0, 0, 0)
		TabFrameTemplate.ScrollBarThickness = 0

		UIListLayout_2.Parent = TabFrameTemplate
		UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
		UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout_2.Padding = UDim.new(0.0199999996, 0)

		local function MVRAW_fake_script() -- TabButtonTemplate.MouseClick 
			local script = Instance.new('LocalScript', TabButtonTemplate)

			local tabs = script.Parent.Parent.Parent.Parent.Tabs

			script.Parent.MouseButton1Click:Connect(function()
				if tabs:FindFirstChild(script.Parent.Name) then
					tabs:FindFirstChild(script.Parent.Name).Visible = true
					for a,e in pairs(tabs:GetChildren()) do
						if e.Name ~= script.Parent.Name then
							e.Visible = false
						end
					end
				end
			end)
		end
		coroutine.wrap(MVRAW_fake_script)()

		local function SLEAJGJ_fake_script() -- TabFrameTemplate.AutoResize 
			local script = Instance.new('LocalScript', TabFrameTemplate)


			while wait(0.01) do
				local Canvas = script.Parent
				local Constraint = script.Parent.UIListLayout
				Canvas.CanvasSize = UDim2.new(0, Constraint.AbsoluteContentSize.X, 0, Constraint.AbsoluteContentSize.Y)
			end
		end
		coroutine.wrap(SLEAJGJ_fake_script)()

		local objects = {}

		function objects:CreateButton(name, callback)

			if name == "" or nil then return end

			local callback = callback or function() end

			local ButtonTemplate = Instance.new("TextButton")

			ButtonTemplate.Name = name
			ButtonTemplate.Parent = TabFrameTemplate
			ButtonTemplate.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
			ButtonTemplate.BorderSizePixel = 0
			ButtonTemplate.Position = UDim2.new(0.0186915882, 0, 0, 0)
			ButtonTemplate.Size = UDim2.new(0, 412, 0, 31)
			ButtonTemplate.Font = Enum.Font.SourceSans
			ButtonTemplate.Text = name
			ButtonTemplate.TextColor3 = Color3.fromRGB(255, 255, 255)
			ButtonTemplate.TextScaled = true
			ButtonTemplate.TextSize = 14.000
			ButtonTemplate.TextWrapped = true

			ButtonTemplate.MouseButton1Down:Connect(function()
				pcall(callback)
			end)

		end

		function objects:CreateToggle(name, callback)

			if name == "" or nil then return end

			local callback = callback or function() end

			local actions = {}
			local toggled = false

			local ToggleTemplate = Instance.new("TextButton")
			local LittleBar = Instance.new("Frame")

			ToggleTemplate.Name = name
			ToggleTemplate.Parent = TabFrameTemplate
			ToggleTemplate.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
			ToggleTemplate.BorderSizePixel = 0
			ToggleTemplate.Position = UDim2.new(0.0186915882, 0, 0, 0)
			ToggleTemplate.Size = UDim2.new(0, 412, 0, 31)
			ToggleTemplate.Font = Enum.Font.SourceSans
			ToggleTemplate.Text = name
			ToggleTemplate.TextColor3 = Color3.fromRGB(255, 255, 255)
			ToggleTemplate.TextScaled = true
			ToggleTemplate.TextSize = 14.000
			ToggleTemplate.TextWrapped = true

			LittleBar.Parent = ToggleTemplate
			LittleBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
			LittleBar.BorderSizePixel = 0
			LittleBar.Position = UDim2.new(0, 0, 1, 0)
			LittleBar.Size = UDim2.new(0, 412, 0, 1)

			ToggleTemplate.MouseButton1Down:Connect(function()
				if toggled == false then
					LittleBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
				else
					LittleBar.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
				end
				toggled = not toggled
				pcall(callback, toggled)
			end)

		end

		function objects:CreateTextbox(name, disapper, callback)

			if name == "" or nil then return end
			if disapper == "" or nil then return end

			local callback = callback or function() end


			local TextBox = Instance.new("Frame")
			local TextBoxTitle = Instance.new("TextLabel")
			local Input = Instance.new("TextBox")

			TextBox.Name = name
			TextBox.Parent = TabFrameTemplate
			TextBox.BackgroundColor3 = Color3.fromRGB(43, 43, 43)
			TextBox.BorderSizePixel = 0
			TextBox.Size = UDim2.new(0, 412, 0, 31)

			TextBoxTitle.Name = "TextBoxTitle"
			TextBoxTitle.Parent = TextBox
			TextBoxTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextBoxTitle.BackgroundTransparency = 1.000
			TextBoxTitle.BorderSizePixel = 0
			TextBoxTitle.Size = UDim2.new(0, 206, 0, 31)
			TextBoxTitle.Font = Enum.Font.SourceSans
			TextBoxTitle.Text = name
			TextBoxTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
			TextBoxTitle.TextScaled = true
			TextBoxTitle.TextSize = 14.000
			TextBoxTitle.TextWrapped = true

			Input.Name = "Input"
			Input.Parent = TextBox
			Input.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
			Input.BorderSizePixel = 0
			Input.Position = UDim2.new(0.5, 0, 0.159999996, 0)
			Input.Size = UDim2.new(0, 196, 0, 21)
			Input.Font = Enum.Font.SourceSans
			Input.Text = ""
			Input.TextColor3 = Color3.fromRGB(255, 255, 255)
			Input.TextScaled = true
			Input.TextSize = 14.000
			Input.TextWrapped = true

			Input.FocusLost:Connect(
				function(ep)
					if ep then
						if #Input.Text > 0 then
							pcall(callback, Input.Text)
							if disapper then
								Input.Text = ""
							end
						end
					end
				end
			)
		end
		return objects

	end
	return tabs

end
return lib
